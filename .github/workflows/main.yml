name: Build PyTorch Wheels

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-wheels:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11]
        pytorch-version: [2.4.0, 2.5.0]
        cuda-version: [12.1.0, 12.4.0]
        cuversion: [121, 124]
    env:
      CIBW_SKIP: cp36-* cp37-* cp38-* cp39-* cp310-*

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Build custom Docker image
      run: |
        echo "Building Docker image for CUDA version ${{ matrix.cuda-version }}"
        cat <<EOF > Dockerfile
        FROM nvidia/cuda:${{ matrix.cuda-version }}-devel-ubuntu20.04

        # Ensure apt-get uses non-interactive mode
        ENV DEBIAN_FRONTEND=noninteractive

        RUN apt-get update && apt-get install -y software-properties-common && \
        add-apt-repository ppa:deadsnakes/ppa
    
        # Install Python and necessary dependencies
        RUN apt-get update && apt-get install -y \
            python3.11 \
            python3.11-venv \
            python3.11-distutils \
            build-essential \
            cmake \
            git \
            curl && \
            ln -s /usr/bin/python3.11 /usr/bin/python

        # Install pip
        RUN curl -sS https://bootstrap.pypa.io/get-pip.py | python
        EOF

        docker build -t cuda-python:${{ matrix.cuversion }} .

    - name: Build wheels
      env:
        CIBW_MANYLINUX_X86_64_IMAGE: "cuda-python:${{ matrix.cuversion }}"
      run: |
        echo "Building wheels with CUDA ${{ matrix.cuversion}} and PyTorch ${{ matrix.pytorch-version }}"
        cibuildwheel --platform linux
        mkdir -p dist
        cp wheelhouse/*.whl dist/

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: wheels
        path: dist/